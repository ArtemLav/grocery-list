{"version":3,"sources":["constants/constants.js","components/AddGrocery/AddGrocery.jsx","components/GroceryItem/GroceryItem.jsx","shapes/GroceryShape.js","components/GroceryList/GroceryList.jsx","App.jsx","useLocalStorage.js","index.js"],"names":["FILTERS","all","have","ranOut","AddGrocery","addNewGrocery","useState","name","setName","priority","setPriority","status","setStatus","handleNameChange","useCallback","event","target","value","handlePriorityChange","handleStatusChange","className","onSubmit","preventDefault","type","placeholder","required","onChange","GroceryItem","PropTypes","string","isRequired","number","item","removeGrocery","changeStatus","id","onClick","GroceryList","groceryList","filteredGrocery","setActiveGroceryFilter","filters","length","map","defaultProps","App","key","defaultValue","stored","localStorage","getItem","initial","JSON","parse","setValue","useEffect","setItem","stringify","useLocalStorage","setGroceryList","activeGroceryFilter","useMemo","filter","filterGrocery","newGrocery","Date","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b997752.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  have: 'have',\n  ranOut: 'ranOut',\n};\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddGrocery = ({ addNewGrocery }) => {\n  const [name, setName] = useState('');\n  const [priority, setPriority] = useState('');\n  const [status, setStatus] = useState('');\n\n  const handleNameChange = useCallback((event) => {\n    setName(event.target.value);\n  }, []);\n\n  const handlePriorityChange = useCallback((event) => {\n    setPriority(event.target.value);\n  }, []);\n\n  const handleStatusChange = useCallback((event) => {\n    setStatus(event.target.value);\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!priority || !status) {\n      return;\n    }\n\n    addNewGrocery(name, priority, status);\n    setName('');\n    setPriority('');\n    setStatus('');\n  };\n\n  return (\n    <div className=\"col-4\">\n      <h3 className=\"m-2\">Add new product</h3>\n      <form onSubmit={handleSubmit} className=\"form-group m-2\">\n        <input\n          type=\"text\"\n          className=\"new-product form-control mb-3\"\n          placeholder=\"Enter product name\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n\n        <select\n          className=\"custom-select mb-3\"\n          value={priority}\n          onChange={handlePriorityChange}\n          required\n        >\n          <option value=\"\">Select priority</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n\n        <select\n          className=\"custom-select mb-4\"\n          value={status}\n          onChange={handleStatusChange}\n          required\n        >\n          <option value=\"\">Select status</option>\n          <option value=\"ranOut\">Ran out</option>\n          <option value=\"have\">Have</option>\n        </select>\n\n        <div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-info\"\n          >\n            Add product\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nAddGrocery.propTypes = {\n  addNewGrocery: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GroceryShape } from '../../shapes/GroceryShape';\n\nexport const GroceryItem = ({ item, removeGrocery, changeStatus }) => (\n  <div>\n    <p className=\"text-primary\">\n      <span className=\"text-secondary\">Name: </span>\n      {item.name}\n    </p>\n    <p className=\"text-primary\">\n      <span className=\"text-secondary\">Priority: </span>\n      {item.priority}\n    </p>\n    <p className=\"text-primary\">\n      <span className=\"text-secondary\">Status: </span>\n      {item.status === 'have' ? 'Have' : 'Ran Out'}\n    </p>\n\n    <div>\n      <span className=\"text-secondary\">Change status</span>\n      <select\n        className=\"custom-select mx-3 w-25\"\n        onChange={event => changeStatus(event.target.value, item.id)}\n      >\n        <option value=\"\">Change Status</option>\n        <option value=\"ranOut\">Ran out</option>\n        <option value=\"have\">Have</option>\n      </select>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger float-right\"\n        onClick={() => removeGrocery(item.id)}\n      >\n        Remove\n      </button>\n    </div>\n  </div>\n);\n\nGroceryItem.propTypes = {\n  removeGrocery: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  item: PropTypes.shape(GroceryShape).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const GroceryShape = {\n  name: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GroceryItem } from '../GroceryItem/GroceryItem';\nimport { GroceryShape } from '../../shapes/GroceryShape';\n\nexport const GroceryList = ({\n  groceryList,\n  filteredGrocery,\n  removeGrocery,\n  changeStatus,\n  setActiveGroceryFilter,\n  filters,\n}) => (\n  <div className=\"col-8\">\n    {!groceryList.length ? (\n      <h1 className=\"text-center text-secondary\">Your List is empty</h1>\n    ) : (\n      <div className=\"mt-5\">\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            onClick={() => setActiveGroceryFilter(filters.all)}\n            className=\"btn btn-secondary\"\n          >\n            All\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setActiveGroceryFilter(filters.have)}\n            className=\"btn btn-primary\"\n          >\n            Have\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setActiveGroceryFilter(filters.ranOut)}\n            className=\"btn btn-warning\"\n          >\n            Ran Out\n          </button>\n        </div>\n        <ul className=\"list-group\">\n          {filteredGrocery.map(item => (\n            <li key={item.id} className=\"list-group-item bg-light\">\n              <GroceryItem\n                item={item}\n                removeGrocery={removeGrocery}\n                changeStatus={changeStatus}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    )}\n  </div>\n);\n\nGroceryList.propTypes = {\n  setActiveGroceryFilter: PropTypes.func.isRequired,\n  removeGrocery: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  groceryList: PropTypes.arrayOf(PropTypes.shape(GroceryShape)),\n  filteredGrocery: PropTypes.arrayOf(PropTypes.shape(GroceryShape)),\n  filters: PropTypes.shape({\n    all: PropTypes.string.isRequired,\n    have: PropTypes.string.isRequired,\n    ranOut: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nGroceryList.defaultProps = {\n  groceryList: [],\n  filteredGrocery: [],\n};\n","import React, { useMemo, useState } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nimport { FILTERS } from './constants/constants';\nimport { AddGrocery } from './components/AddGrocery/AddGrocery';\nimport { GroceryList } from './components/GroceryList/GroceryList';\n\nexport const App = () => {\n  const [groceryList, setGroceryList] = useLocalStorage('groceryList', []);\n  const [activeGroceryFilter, setActiveGroceryFilter] = useState(FILTERS.all);\n\n  const addNewGrocery = (name, priority, status) => {\n    const newGrocery = {\n      name,\n      priority,\n      status,\n      id: +new Date(),\n    };\n\n    setGroceryList([...groceryList, newGrocery]);\n  };\n\n  const filterGrocery = () => {\n    switch (activeGroceryFilter) {\n      case FILTERS.all:\n        return groceryList;\n\n      case FILTERS.have:\n        return groceryList.filter(item => item.status === 'have');\n\n      case FILTERS.ranOut:\n        return groceryList.filter(item => item.status === 'ranOut');\n\n      default:\n        return groceryList;\n    }\n  };\n\n  const filteredGrocery = useMemo(\n    () => filterGrocery(),\n    [activeGroceryFilter, groceryList],\n  );\n\n  const removeGrocery = (id) => {\n    setGroceryList(groceryList.filter(item => item.id !== id));\n  };\n\n  const changeStatus = (status, id) => {\n    setGroceryList(groceryList.map((item) => {\n      if (item.id !== id) {\n        return { ...item };\n      }\n\n      return {\n        ...item,\n        status,\n      };\n    }));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Grocery List</h1>\n      <div className=\"row\">\n        <AddGrocery addNewGrocery={addNewGrocery} />\n        <GroceryList\n          filteredGrocery={filteredGrocery}\n          groceryList={groceryList}\n          removeGrocery={removeGrocery}\n          changeStatus={changeStatus}\n          setActiveGroceryFilter={setActiveGroceryFilter}\n          filters={FILTERS}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useLocalStorage = (key, defaultValue) => {\n  const stored = localStorage.getItem(key);\n  const initial = stored ? JSON.parse(stored) : defaultValue;\n  const [value, setValue] = useState(initial);\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}